name: CI Sandbox model CI

on:
  push:
    branches:
      - master
      - develop
      - ak/revrite-ci
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      container_image:
        description: "Container image"
        default: "cypress/browsers:node-20.17.0-chrome-129.0.6668.70-1-ff-130.0.1-edge-129.0.2792.52-1"
        required: true

jobs:
  codeStyle:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.container_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'npm'
      - name: Copy .npmrc for authentication
        run: echo "${{ secrets.NPMRC_PULL }}" > ~/.npmrc
      - name: Install dependencies
        run: npm ci --prefer-offline --ignore-scripts
      - name: Run Lint
        run: npm run lint
    if: github.ref != 'refs/heads/master'

  buildLibrary:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.container_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'npm'
      - name: Copy .npmrc for authentication
        run: echo "${{ secrets.NPMRC_PULL }}" > ~/.npmrc
      - name: Install dependencies
        run: npm ci --prefer-offline --ignore-scripts
      - name: Build Library
        run: npm run build-library
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
          retention-days: 1
    if: github.ref != 'refs/heads/master'

  deploy:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.container_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'
          cache: 'npm'
      - name: Copy .npmrc for authentication
        run: echo "${{ secrets.NPMRC_PULL }}" > ~/.npmrc
      - name: Install dependencies
        run: npm ci --prefer-offline --ignore-scripts
      - name: Run Build and Pack
        run: npm run ci-build-and-pack
      - name: Update .npmrc for publishing
        run: echo "${{ secrets.NPMRC_PUSH }}" > ~/.npmrc
      - name: Publish Package
        run: npm run ci-publish-package
    if: startsWith(github.ref, 'refs/tags/')
